{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAEA,MAAMC,EAAO,CACbC,OAAQC,SAASC,cAAc,mBAC/BC,KAAMF,SAASC,cAAc,UAEvBE,EAAeL,EAAKI,KAAKE,SAoB/B,SAASC,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GAE1C,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACrBL,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CAxBjCT,EAAKC,OAAOe,iBAAiB,SAG7B,SAA+BC,GAC5BA,EAAEC,iBACH,IAAIC,EAAId,EAAaI,MAAMW,MACvBC,EAAIhB,EAAaiB,KAAKF,MACtBG,EAAIlB,EAAamB,OAAOJ,MAE5BD,EAAIM,OAAON,GACXE,EAAII,OAAOJ,GACXE,EAAIE,OAAOF,IAiBb,UAAuBJ,EAAAO,EAACL,EAAEA,EAACE,EAAEA,EAAGI,EAAAC,IAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAGM,IACjBA,GAAK,IACRH,GAAKL,GAGLS,YAAW,CAACH,EAAGR,KACbZ,EAAcoB,EAAGR,GAAGY,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MAErCX,EAAAkC,OAAOC,QAAQ,qBAAqBzB,QAAeC,MAAWyB,EAAAC,sBAAsB,IAClFC,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MACrBX,EAAAkC,OAAOK,QAAQ,oBAAoB7B,QAAeC,MAAWyB,EAAAC,sBAAsB,GACpF,GACCT,EARAG,EAAI,EAQEH,E,CA5BZY,CADiB,C,EAACnB,E,EAAGE,E,EAAGE,E,EAJhB,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\nimport {promiseSectionOptions} from './notify-options';\nconst refs = { \nbutton: document.querySelector('[type=\"submit\"]'),\nform: document.querySelector('.form'),\n};\nconst formElements = refs.form.elements;\n\n\nrefs.button.addEventListener('click', startPromiseCreating);\n\n\nfunction startPromiseCreating (e) {\n   e.preventDefault();\n  let d = formElements.delay.value;\n  let s = formElements.step.value;\n  let a = formElements.amount.value;\n  let p = 0;\n  d = Number(d);\n  s = Number(s);\n  a = Number(a);\n  const elements = {d, s, a, p};\n  dataBandler(elements);\n}\n\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\nreturn new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  })\n}\nfunction dataBandler ({d, s, a, p}) {\n  for (let i = 0; i < a; i++) {\n    if (i >= 1) {\n     d += s;\n    }\n    p = i + 1;\n     setTimeout((p, d) => {\n       createPromise(p, d).then(({ position, delay }) => {\n        \n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, promiseSectionOptions);\n       }).catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, promiseSectionOptions);\n     });\n      },d, p, d)\n   }\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","button","document","querySelector","form","$47d4ff9957288465$var$formElements","elements","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","e","preventDefault","d","value","s","step","a","amount","Number","d1","p","p1","i","setTimeout","then","Notify","success","$fT11K","promiseSectionOptions","catch","failure","$47d4ff9957288465$var$dataBandler"],"version":3,"file":"03-promises.3ba42f4f.js.map"}